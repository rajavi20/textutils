{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toLowerCase","showAlert","toUpperCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alerts","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.eabe44d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        {props.title}\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current='page' href=\"#\">\r\n            Home \r\n            </a>\r\n          </li>\r\n          {/*<li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">\r\n            {props.about} \r\n            </a>\r\n          </li>*/}\r\n        </ul>\r\n        <div className={`custom-control custom-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customSwitch1\"\r\n            onClick={props.toggleMode}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">\r\n            Switch Mode\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here..\",\r\n  about: \"About\",\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        const newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text is converted into LowerCase\", 'success')\r\n    \r\n    }\r\n\r\n    const handleUpClick = () => {\r\n        const newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text is converted into UpperCase\", 'success')\r\n    \r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        const newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text has been cleared\", 'success')\r\n    \r\n    }\r\n\r\n    const handleCopyClick = () => {\r\n        const newText = document.getElementById('myBox');\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n        props.showAlert(\"Text has been copied to clipboard\", 'success')\r\n        \r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(' '));\r\n        props.showAlert(\"Extra Spaces have been removed\", 'success')\r\n    \r\n    }\r\n\r\n    const [text, setText] = useState(\"Enter your text here...\");\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"form-group\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'grey', color: props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"9\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Lowercase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Uppercase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear-Text</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>Copy-Text</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Exta-Space</button>\r\n        \r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n        <h3>Your text summary...</h3>\r\n        <p><b>{text.split(\" \").length} words and {text.length} characters</b></p>\r\n        <p><b>{0.008*text.split(\" \").length} Minutes Read</b></p>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:'Enter some text above to preview it here...'}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alerts(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n      \r\n      <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React from 'react'\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport { useState } from \"react\";\nimport Alerts from \"./components/Alerts\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    },1500)\n  } \n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode has been enabled\", 'success');\n      document.title = 'TextUtils - DarkMode'\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", 'success');\n      document.title = 'TextUtils - LightMode'\n    }\n  }\n  return (\n    <>\n    {/*<Router>*/}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alerts alert={alert} />\n      <div className=\"container my-3\">\n        {/*<Switch>\n        <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n  <Route exact path=\"/\">*/}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze...\" mode={mode} />\n          {/*</Route>\n        </Switch>*/}\n      </div>\n      {/* {</Router>} */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}